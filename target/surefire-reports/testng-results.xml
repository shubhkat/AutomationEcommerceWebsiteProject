<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="7" passed="5" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Able to capture Screenshot]]>
    </line>
    <line>
      <![CDATA[Product Title: Dettol Original Liquid Hand Wash Refill Hand Wash Pouch]]>
    </line>
    <line>
      <![CDATA[Product price: 109]]>
    </line>
    <line>
      <![CDATA[Delivery Charges: 50]]>
    </line>
    <line>
      <![CDATA[Delivery Charges + Product price = 159]]>
    </line>
    <line>
      <![CDATA[All price are different]]>
    </line>
    <line>
      <![CDATA[Total price for the product is not equal to total amount to be paid]]>
    </line>
  </reporter-output>
  <suite started-at="2020-06-22T17:06:05 IST" name="Suite" finished-at="2020-06-22T17:07:10 IST" duration-ms="64806">
    <groups>
      <group name="testMethods">
        <method signature="TestFlipkart.testLoginPage()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" name="testLoginPage" class="com.flipkart.TestFlipkart"/>
      </group> <!-- testMethods -->
    </groups>
    <test started-at="2020-06-22T17:06:05 IST" name="Test" finished-at="2020-06-22T17:07:10 IST" duration-ms="64806">
      <class name="com.flipkart.TestFlipkart">
        <test-method is-config="true" signature="preCondition(java.lang.String)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:05 IST" name="preCondition" finished-at="2020-06-22T17:06:26 IST" duration-ms="21143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testLoginPage()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:27 IST" name="testLoginPage" description="this method is used to login in an application" finished-at="2020-06-22T17:06:41 IST" duration-ms="13804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginPage -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:41 IST" name="captureScreenshot" finished-at="2020-06-22T17:06:42 IST" duration-ms="788" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginPage status=SUCCESS method=TestFlipkart.testLoginPage()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testVerifyLogo()[pri:1, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:42 IST" name="testVerifyLogo" description="this method is used to verify logo of application" depends-on-groups="testMethods" finished-at="2020-06-22T17:06:42 IST" duration-ms="127" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Flipkart] but found [Supermart]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Flipkart] but found [Supermart]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at com.filpkart.Flipkart.verifyLogo(Flipkart.java:116)
at com.flipkart.TestFlipkart.testVerifyLogo(TestFlipkart.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyLogo -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:42 IST" name="captureScreenshot" finished-at="2020-06-22T17:06:42 IST" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyLogo status=FAILURE method=TestFlipkart.testVerifyLogo()[pri:1, instance:com.flipkart.TestFlipkart@618b19ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Able to capture Screenshot]]>
            </line>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testProductSelection()[pri:2, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:42 IST" name="testProductSelection" description="this method is used to select product from product page" depends-on-groups="testMethods" finished-at="2020-06-22T17:06:51 IST" duration-ms="8236" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Product Title: Dettol Original Liquid Hand Wash Refill Hand Wash Pouch]]>
            </line>
            <line>
              <![CDATA[Product price: 109]]>
            </line>
          </reporter-output>
        </test-method> <!-- testProductSelection -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:51 IST" name="captureScreenshot" finished-at="2020-06-22T17:06:51 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductSelection status=SUCCESS method=TestFlipkart.testProductSelection()[pri:2, instance:com.flipkart.TestFlipkart@618b19ad] output=Product Title: Dettol Original Liquid Hand Wash Refill Hand Wash Pouch]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testAddToBasket()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:06:51 IST" name="testAddToBasket" description="this method is used to add a selected product to the basket" finished-at="2020-06-22T17:07:02 IST" depends-on-methods="com.flipkart.TestFlipkart.testProductSelection" duration-ms="10961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddToBasket -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="captureScreenshot" finished-at="2020-06-22T17:07:02 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddToBasket status=SUCCESS method=TestFlipkart.testAddToBasket()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="testComparePrice()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="testComparePrice" description="this method is used to compare the price whether it is same or not" finished-at="2020-06-22T17:07:02 IST" depends-on-methods="com.flipkart.TestFlipkart.testAddToBasket" duration-ms="200" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Delivery Charges: 50]]>
            </line>
            <line>
              <![CDATA[Delivery Charges + Product price = 159]]>
            </line>
            <line>
              <![CDATA[All price are different]]>
            </line>
            <line>
              <![CDATA[Total price for the product is not equal to total amount to be paid]]>
            </line>
          </reporter-output>
        </test-method> <!-- testComparePrice -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="captureScreenshot" finished-at="2020-06-22T17:07:02 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testComparePrice status=SUCCESS method=TestFlipkart.testComparePrice()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad] output=Delivery Charges: 50]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method signature="detailsoftestcases()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="detailsoftestcases" finished-at="2020-06-22T17:07:02 IST" depends-on-methods="com.flipkart.TestFlipkart.testComparePrice, com.flipkart.TestFlipkart.testAddToBasket, com.flipkart.TestFlipkart.testLoginPage, com.flipkart.TestFlipkart.testProductSelection" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- detailsoftestcases -->
        <test-method is-config="true" signature="captureScreenshot(org.testng.ITestResult)[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="captureScreenshot" finished-at="2020-06-22T17:07:02 IST" duration-ms="140" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=detailsoftestcases status=SUCCESS method=TestFlipkart.detailsoftestcases()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="postCondition()[pri:0, instance:com.flipkart.TestFlipkart@618b19ad]" started-at="2020-06-22T17:07:02 IST" name="postCondition" finished-at="2020-06-22T17:07:10 IST" duration-ms="7680" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- com.flipkart.TestFlipkart -->
      <class name="com.flipkart.Baseclass">
        <test-method is-config="true" signature="setReport()[pri:0, instance:com.flipkart.Baseclass@74235045]" started-at="2020-06-22T17:06:05 IST" name="setReport" finished-at="2020-06-22T17:06:05 IST" duration-ms="347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReport -->
      </class> <!-- com.flipkart.Baseclass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
